# Github workflow runner instructions using cutomized actions
name: Bulletin CI

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: build for amd64/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.pta }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.ref_name }}

  test:
    needs: build
    runs-on: ubuntu-latest
    name: run unit tests
    steps:
      ##########    CHECK OUT REPO AND PRINT REPO INFO #######
      - name: Checkout
        uses: actions/checkout@v3
      ######### DOCKER LOGIN AND PULL CUSTOM ACTION #############
      - name: Docker Login and Pull
        uses: ./.github/actions/docker-pull-image
        with:
          username:
            ${{ github.repository_owner }}
          password:
            ${{ secrets.pta }}
          registry:
            ghcr.io
          repository:
            ${{ github.repository }}
          tag:
            ${{ github.ref_name }}
      - name: Run tests
        run: docker run
          -e TWT_CONSUMER_KEY="${{ secrets.TWT_CONSUMER_KEY }}"
          -e TWT_CONSUMER_SECRET="${{ secrets.TWT_CONSUMER_SECRET }}"
          -e TWT_ACCESS_KEY="${{ secrets.TWT_ACCESS_KEY }}"
          -e TWT_ACCESS_SECRET="${{ secrets.TWT_ACCESS_SECRET }}"
          ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          /bin/bash -c "coverage run manage.py test apps"
      - name: Run tests
        run: docker run ghcr.io/${{ github.repository }}:${{ github.ref_name }} /bin/bash -c "coverage run manage.py test apps && coverage xml manage.py test apps"
      - name: codecov
        uses: codecov/codecov-action@v3
          with:
            token: ${{ secrets.codecov_token }} # not required for public repos
            name: codecov-umbrella # optional
            fail_ci_if_error: true # optional (default = false)
            verbose: true # optional (default = false)